version: "3.7"

#
# Services
# ========
#
services:

    #
    # CLIFF fetch annotation
    # ----------------------
    #
    mc_cliff_fetch_annotation:
        build:
            context: ./cliff-fetch-annotation/
        image: dockermediacloud/mediacloud-cliff-fetch-annotation:latest
        env_file: global.env
        environment:
            # Annotator endpoint URL
            MC_CLIFF_ANNOTATOR_URL: ""
        depends_on:
            - mc_extract_and_vector
            - mc_postgresql_pgbouncer
            - mc_rabbitmq_server
        deploy:
            # Worker count
            replicas: 4
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 256M

    #
    # CLIFF update story tags
    # -----------------------
    #
    mc_cliff_update_story_tags:
        build:
            context: ./cliff-update-story-tags/
        image: dockermediacloud/mediacloud-cliff-update-story-tags:latest
        env_file: global.env
        environment:
            # CLIFF version tag
            MC_CLIFF_VERSION_TAG: "cliff_clavin_v2.4.1"
            # Tag set to use for geographical name entities
            MC_CLIFF_GEONAMES_TAG_SET: "cliff_geonames"
            # Tag set to use for organization name entities
            MC_CLIFF_ORGANIZATIONS_TAG_SET: "cliff_organizations"
            # Tag set to use for person name entities
            MC_CLIFF_PEOPLE_TAG_SET: "cliff_people"
        depends_on:
            - mc_cliff_fetch_annotation
            - mc_postgresql_pgbouncer
            - mc_rabbitmq_server
        deploy:
            # Worker count
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 256M

    #
    # Crawler provider
    # ----------------
    #
    mc_crawler_provider:
        build:
            context: ./crawler-provider/
        image: dockermediacloud/mediacloud-crawler-provider:latest
        env_file: global.env
        depends_on:
            - mc_postgresql_pgbouncer
        deploy:
            # Only one instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 1G

    #
    # Crawler fetcher
    # ---------------
    #
    mc_crawler_fetcher:
        build:
            context: ./crawler-fetcher/
        image: dockermediacloud/mediacloud-crawler-fetcher:latest
        env_file: global.env
        depends_on:
            - mc_postgresql_pgbouncer
            - mc_rabbitmq_server
        deploy:
            # Worker count
            replicas: 8
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 512M

    #
    # Create missing PostgreSQL partitions
    # ------------------------------------
    #
    mc_create_missing_partitions:
        build:
            context: ./create-missing-partitions/
        image: dockermediacloud/mediacloud-create-missing-partitions:latest
        env_file: global.env
        depends_on:
            - mc_postgresql_pgbouncer
        deploy:
            # Only one instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 256G

    #
    # Extract article HTML from page HTML
    # -----------------------------------
    #
    mc_extract_article_from_page:
        build:
            context: ./extract-article-from-page/
        image: dockermediacloud/mediacloud-extract-article-from-page:latest
        env_file: global.env
        deploy:
            # Worker count
            replicas: 8
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 512M

    #
    # Extract and vector stories
    # --------------------------
    #
    mc_extract_and_vector:
        build:
            context: ./extract-and-vector/
        image: dockermediacloud/mediacloud-extract-and-vector:latest
        env_file: global.env
        depends_on:
            - mc_extract_article_from_page
            - mc_crawler
            - mc_postgresql_pgbouncer
            - mc_rabbitmq_server
        deploy:
            # Worker count
            replicas: 24
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 256M

    #
    # Fetch story stats from Facebook
    # -------------------------------
    #
    mc_facebook_fetch_story_stats:
        build:
            context: ./facebook-fetch-story-stats/
        image: dockermediacloud/mediacloud-facebook-fetch-story-stats:latest
        env_file: global.env
        environment:
            # Facebook application ID
            MC_FACEBOOK_APP_ID: ""
            # Facebook application secret
            MC_FACEBOOK_APP_SECRET: ""
            # Timeout for API calls
            MC_FACEBOOK_TIMEOUT: "60"
        depends_on:
            - mc_extract_and_vector
            - mc_postgresql_pgbouncer
            - mc_rabbitmq_server
        deploy:
            # Worker count
            replicas: 4
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 256M

    #
    # Generate daily RSS dumps Cron job
    # ---------------------------------
    #
    mc_cron_generate_daily_rss_dumps:
        build:
            context: ./cron-generate-daily-rss-dumps/
        image: dockermediacloud/mediacloud-cron-generate-daily-rss-dumps:latest
        env_file: global.env
        depends_on:
            - mc_postgresql_pgbouncer
        volumes:
            # Shared with "webapp-httpd" container:
            - vol_daily_rss_dumps:/var/lib/daily_rss_dumps/
        deploy:
            # Only one instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 1G

    #
    # Generate media health report Cron job
    # -------------------------------------
    #
    mc_cron_generate_media_health:
        build:
            context: ./cron-generate-media-health/
        image: dockermediacloud/mediacloud-cron-generate-media-health:latest
        env_file: global.env
        deploy:
            # Only one instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 256M

    #
    # Generate daily / weekly user summary Cron job
    # ---------------------------------------------
    #
    mc_cron_generate_user_summary:
        build:
            context: ./cron-generate-user-summary/
        image: dockermediacloud/mediacloud-cron-generate-user-summary:latest
        env_file: global.env
        depends_on:
            - mc_postgresql_pgbouncer
        deploy:
            # Only one instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 256M

    #
    # Import stories into Solr
    # ------------------------
    #
    mc_import_solr_data:
        build:
            context: ./import-solr-data/
        image: dockermediacloud/mediacloud-import-solr-data:latest
        env_file: global.env
        environment:
            # Stories to import into Solr on a single run
            MC_SOLR_IMPORT_MAX_QUEUED_STORIES: "100000"
        depends_on:
            - mc_postgresql_pgbouncer
            - mc_solr_shard
        deploy:
            # Only one instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "16"
                    # RAM limit
                    memory: 4G

    #
    # Import stories by scraping Feedly
    # ---------------------------------
    #
    mc_import_stories_feedly:
        build:
            context: ./import-stories-feedly/
        image: dockermediacloud/mediacloud-import-stories-feedly:latest
        env_file: global.env
        deploy:
            # Writes stories to PostgreSQL
            - net_postgresql
        deploy:
            # Only one instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit (uses quite a lot of it until it OOMs)
                    memory: 4G

    #
    # OpenDKIM server
    # ---------------
    #
    mc_mail_opendkim_server:
        build:
            context: ./mail-opendkim-server/
        image: dockermediacloud/mediacloud-mail-opendkim-server:latest
        env_file: global.env
        ports:
            # Expose OpenDKIM to host computer
            - "12301"
        deploy:
            # Only one instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 128M

    #
    # Postfix server
    # ---------------
    #
    mc_mail_postfix_server:
        build:
            context: ./mail-postfix-server/
        image: dockermediacloud/mediacloud-mail-postfix-server:latest
        env_file: global.env
        expose:
            # Expose SMTP to mail senders
            - "25"
        volumes:
            - vol_postfix_data:/var/spool/postfix/
        deploy:
            # Only one instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 128M

    #
    # NYTLabels fetch annotation
    # ----------------------
    #
    mc_nytlabels_fetch_annotation:
        build:
            context: ./nytlabels-fetch-annotation/
        image: dockermediacloud/mediacloud-nytlabels-fetch-annotation:latest
        env_file: global.env
        environment:
            # NYTLabels annotator endpoint URL
            MC_NYTLABELS_ANNOTATOR_URL: ""
        depends_on:
            - mc_extract_and_vector
            - mc_predict_news_labels
            - mc_postgresql_pgbouncer
            - mc_rabbitmq_server
        deploy:
            # Worker count
            replicas: 4
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 256M

    #
    # NYTLabels update story tags
    # -----------------------
    #
    mc_nytlabels_update_story_tags:
        build:
            context: ./nytlabels-update-story-tags/
        image: dockermediacloud/mediacloud-nytlabels-update-story-tags:latest
        env_file: global.env
        environment:
            # NYTLabels version tag
            MC_NYTLABELS_VERSION_TAG: "nyt_labeller_v1.0.0"
            # Tag set to use for NYTLabels-derived tags
            MC_NYTLABELS_TAG_SET: "nyt_labels"
        depends_on:
            - mc_nytlabels_fetch_annotation
            - mc_postgresql_pgbouncer
            - mc_rabbitmq_server
        deploy:
            # Worker count
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 256M

    #
    # PgBouncer
    # ---------
    #
    mc_postgresql_pgbouncer:
        build:
            context: ./postgresql-pgbouncer/
        image: dockermediacloud/mediacloud-postgresql-pgbouncer:latest
        env_file: global.env
        depends_on:
            - mc_postgresql_server
        expose:
            - 6432
        deploy:
            # Only one instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure

    #
    # PostgreSQL server
    # -----------------
    #
    mc_postgresql_server:
        build:
            context: ./postgresql-server/
        image: dockermediacloud/mediacloud-postgresql-server:latest
        env_file: global.env
        expose:
            - 5432
        volumes:
            - vol_postgresql_data:/var/lib/postgresql/11/main/
        deploy:
            # Only one instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure

    #
    # NYT-Based News Tagger service
    # -----------------------------
    #
    mc_predict_news_labels:
        build:
            context: ./predict-news-labels/
        image: dockermediacloud/mediacloud-predict-news-labels:latest
        env_file: global.env
        expose:
            - 8080
        deploy:
            # Worker count
            # FIXME disabled while containerization branch is in development because takes up a lot of RAM
            replicas: 0
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 8G

    #
    # Purge PostgreSQL object caches
    # ------------------------------------
    #
    mc_purge_object_caches:
        build:
            context: ./purge-object-caches/
        image: dockermediacloud/mediacloud-purge-object-caches:latest
        env_file: global.env
        depends_on:
            - mc_postgresql_pgbouncer
        deploy:
            # Only one instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 256G

    #
    # RabbitMQ
    # --------
    #
    mc_rabbitmq_server:
        build:
            context: ./rabbitmq-server/
        image: dockermediacloud/mediacloud-rabbitmq-server:latest
        env_file: global.env
        expose:
            - 5672
            - 15672
        volumes:
            - vol_rabbitmq_data:/var/lib/rabbitmq/
        deploy:
            # Only one instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "4"
                    # RAM limit
                    memory: 8G

    #
    # Refresh stats Cron job
    # ----------------------
    #
    mc_cron_refresh_stats:
        build:
            context: ./cron-refresh-stats/
        image: dockermediacloud/mediacloud-cron-refresh-stats:latest
        env_file: global.env
        deploy:
            # Only one instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 256M

    #
    # Add due media to the rescraping queue Cron job
    # ----------------------------------------------
    #
    mc_cron_rescrape_due_media:
        build:
            context: ./cron-rescrape-due-media/
        image: dockermediacloud/mediacloud-cron-rescrape-due-media:latest
        env_file: global.env
        deploy:
            # Only one instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 256M

    #
    # (Re)scrape media
    # ----------------
    #
    mc_rescrape_media:
        build:
            context: ./rescrape-media/
        image: dockermediacloud/mediacloud-rescrape-media:latest
        env_file: global.env
        deploy:
            # Worker count
            replicas: 2
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 512M

    #
    # Report rescraping changes Cron job
    # ----------------------------------
    #
    mc_cron_rescraping_changes:
        build:
            context: ./cron-rescraping-changes/
        image: dockermediacloud/mediacloud-cron-rescraping-changes:latest
        env_file: global.env
        deploy:
            # Only one instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 256M

    #
    # Set media primary language Cron job
    # -----------------------------------
    #
    mc_cron_set_media_primary_language:
        build:
            context: ./cron-set-media-primary-language/
        image: dockermediacloud/mediacloud-cron-set-media-primary-language:latest
        env_file: global.env
        deploy:
            # Only one instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 256M

    #
    # Set media subject country Cron job
    # -----------------------------------
    #
    mc_cron_set_media_subject_country:
        build:
            context: ./cron-set-media-subject-country/
        image: dockermediacloud/mediacloud-cron-set-media-subject-country:latest
        env_file: global.env
        deploy:
            # Only one instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 256M

    #
    # Print long running job states
    # -----------------------------
    #
    mc_cron_print_long_running_job_states:
        build:
            context: ./cron-print-long-running-job-states/
        image: dockermediacloud/mediacloud-cron-print-long-running-job-states:latest
        env_file: global.env
        deploy:
            # Only one instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 256M

    #
    # Solr shard
    # ----------
    #
    mc_solr_shard:
        build:
            context: ./solr-shard/
        image: dockermediacloud/mediacloud-solr-shard:latest
        env_file: global.env
        environment:
            # Shard count
            # (keep in sync with deploy/replicas)
            MC_SOLR_SHARD_COUNT: "24"
        depends_on:
            - mc_solr_zookeeper
        expose:
            - 8983
        volumes:
            - vol_solr_shard_data:/var/lib/solr/
        deploy:
            # Shard count
            # (keep in sync with environment/MC_SOLR_SHARD_COUNT)
            replicas: 24
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "4"
                    # RAM limit
                    memory: 24G

    #
    # Solr ZooKeeper
    # --------------
    #
    mc_solr_zookeeper:
        build:
            context: ./solr-zookeeper/
        image: dockermediacloud/mediacloud-solr-zookeeper:latest
        env_file: global.env
        expose:
            - 2181
            - 2888
            - 3888
        volumes:
            - vol_solr_zookeeper_data:/var/lib/zookeeper/
        deploy:
            # Only one instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 2G

    #
    # Extract story links for a topic
    # -------------------------------
    #
    mc_topics_extract_story_links:
        build:
            context: ./topics-extract-story-links/
        image: dockermediacloud/mediacloud-topics-extract-story-links:latest
        env_file: global.env
        depends_on:
            - mc_extract_article_from_page
        deploy:
            # Worker count
            replicas: 32
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 256M

    #
    # Fetch link for a topic
    # ----------------------
    #
    mc_topics_fetch_link:
        build:
            context: ./topics-fetch-link/
        image: dockermediacloud/mediacloud-topics-fetch-link:latest
        env_file: global.env
        deploy:
            # Worker count
            replicas: 8
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 256M

    #
    # Fetch Twitter URLs
    # ------------------
    #
    mc_topics_fetch_twitter_urls:
        build:
            context: ./topics-fetch-twitter-urls/
        image: dockermediacloud/mediacloud-topics-fetch-twitter-urls:latest
        env_file: global.env
        environment:
            # Twitter API consumer key
            MC_TWITTER_CONSUMER_KEY: ""
            # Twitter API consumer secret
            MC_TWITTER_CONSUMER_SECRET: ""
            # Twitter API access token
            MC_TWITTER_ACCESS_TOKEN: ""
            # Twitter API access token secret
            MC_TWITTER_ACCESS_TOKEN_SECRET: ""
        deploy:
            # Worker count
            replicas: 8
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 256M

    #
    # Mine a topic
    # ------------
    #
    mc_topics_mine:
        build:
            context: ./topics-mine/
        image: dockermediacloud/mediacloud-topics-mine:latest
        env_file: global.env
        environment:
            # Crimson Hexagon API key
            MC_CRIMSON_HEXAGON_API_KEY: ""
        deploy:
            # Worker count
            replicas: 4
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 2G

    #
    # Mine a public topic
    # -------------------
    #
    mc_topics_mine_public:
        build:
            context: ./topics-mine-public/
        image: dockermediacloud/mediacloud-topics-mine-public:latest
        env_file: global.env
        environment:
            # Crimson Hexagon API key
            MC_CRIMSON_HEXAGON_API_KEY: ""
        deploy:
            # Worker count
            replicas: 4
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 2G

    #
    # Snapshot a topic
    # ----------------
    #
    mc_topics_snapshot:
        build:
            context: ./topics-snapshot/
        image: dockermediacloud/mediacloud-topics-snapshot:latest
        env_file: global.env
        environment:
            # Not sure what this is.
            MC_TOPICS_SNAPSHOT_MODEL_REPS: "0"
        deploy:
            # Worker count
            replicas: 2
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 2G

    #
    # Migrate (install or update) database schema
    # -------------------------------------------
    #
    mc_migrate_schema:
        build:
            context: ./migrate-schema/
        image: dockermediacloud/mediacloud-migrate-schema:latest
        env_file: global.env
        depends_on:
            - mc_postgresql_pgbouncer
        deploy:
            # Only a single DDL script
            replicas: 1
            # Run only once, don't attempt to restart it
            restart_policy:
                condition: none
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 256M

    #
    # Munin node
    # ----------
    #
    mc_munin_node:
        build:
            context: ./munin-node/
        image: dockermediacloud/mediacloud-munin-node:latest
        depends_on:
            # Monitors data on PostgreSQL
            - mc_postgresql_pgbouncer
            # Monitors data on Solr
            - mc_solr_shard
        deploy:
            # Only a single instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 512M

    #
    # Munin Cron stats collector
    # --------------------------
    #
    mc_munin_cron:
        build:
            context: ./munin-cron/
        image: dockermediacloud/mediacloud-munin-cron:latest
        depends_on:
            # Reads data from Munin node
            - mc_munin_node
        volumes:
            # Shared with "munin_httpd" container:
            - vol_munin_data:/var/lib/munin/
            # Shared with "munin_httpd" container:
            - vol_munin_html:/var/cache/munin/www/
        deploy:
            # Only a single instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 512M

    #
    # Munin HTTP server
    # -----------------
    #
    mc_munin_httpd:
        build:
            context: ./munin-httpd/
        image: dockermediacloud/mediacloud-munin-httpd:latest
        depends_on:
            # Reads data generated by Munin stats collector
            - mc_munin_cron
        volumes:
            # Shared with "munin_httpd" container:
            - vol_munin_data:/var/lib/munin/
            # Shared with "munin_httpd" container:
            - vol_munin_html:/var/cache/munin/www/
        deploy:
            # Only a single instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 512M

    #
    # Fetch sitemap pages from media
    # ------------------------------
    #
    mc_sitemap_fetch_media_pages:
        build:
            context: ./sitemap-fetch-media-pages/
        image: dockermediacloud/mediacloud-sitemap-fetch-media-pages:latest
        env_file: global.env
        deploy:
            # Worker count
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 2G

    #
    # Webapp (Plackup FastCGI workers)
    # --------------------------------
    #
    mc_webapp_api:
        build:
            context: ./webapp-api/
        image: dockermediacloud/mediacloud-webapp-api:latest
        expose:
            # Plackup FastCGI worker port to be used by webapp_httpd
            - "9090"
        deploy:
            # Starts multiple FastCGI workers
            replicas: 8
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 1G

    #
    # Webapp (HTTP server)
    # --------------------
    #
    mc_webapp_httpd:
        build:
            context: ./webapp-httpd/
        image: dockermediacloud/mediacloud-webapp-httpd:latest
        expose:
            # Expose HTTP port to reverse proxy
            - "80"
        volumes:
            # Shared with "cron_generate_daily_rss_dumps" container:
            - vol_daily_rss_dumps:/mediacloud_webapp_static/rss_dumps/
        deploy:
            # Only one instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 512M

    #
    # Cron job that updates Let's Encrypt certificates used by reverse proxy
    # ----------------------------------------------------------------------
    #
    mc_proxy_cron_certbot:
        build:
            context: ./proxy-cron-certbot/
        image: dockermediacloud/mediacloud-proxy-cron-certbot:latest
        environment:
            # Top-level domain to issue the certificate for
            MC_PROXY_CERTBOT_DOMAIN: "testmediacloud.ml"
            # Email for Let's Encrypt's notifications
            MC_PROXY_CERTBOT_LETSENCRYPT_EMAIL: "linas@media.mit.edu"
            # CloudFlare account email
            MC_PROXY_CERTBOT_CLOUDFLARE_EMAIL: ""
            # CloudFlare account global API key
            MC_PROXY_CERTBOT_CLOUDFLARE_GLOBAL_API_KEY: ""
        volumes:
            # Shared with "proxy_httpd" container:
            - vol_proxy_letsencrypt:/etc/letsencrypt/
        deploy:
            # Only one instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 256M

    #
    # SSL terminating reverse proxy
    # -----------------------------
    #
    mc_proxy_httpd:
        build:
            context: ./proxy-httpd/
        image: dockermediacloud/mediacloud-proxy-httpd:latest
        environment:
            # Semicolon-separated user credentials for restricted webapps
            # (Munin and Portainer); usernames and passwords separated by a
            # colon, e.g.:
            #
            #     "username1:password1;username2:password2;username3:password3"
            #
            MC_PROXY_HTTPD_AUTH_USERS: ""
        ports:
            # HTTP and HTTPS ports
            - "80"
            - "443"
        volumes:
            # Shared with "proxy_cron_certbot" container:
            - vol_proxy_letsencrypt:/etc/letsencrypt/
        depends_on:
            # Requires SSL certificate to run
            - mc_proxy_cron_certbot
            # Proxies to main app
            - mc_webapp_httpd
            # Proxies to Munin's web interface
            - mc_munin_httpd
            # Proxies to Portainer's web UI
            - mc_portainer
        deploy:
            # Only one instance
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 512M

    #
    # Generate word2vec snapshot model
    # ----------------
    #
    mc_word2vec_generate_snapshot_model:
        build:
            context: ./word2vec-generate-snapshot-model/
        image: dockermediacloud/mediacloud-word2vec-generate-snapshot-model:latest
        env_file: global.env
        deploy:
            # Worker count
            replicas: 1
            # Auto-restart on crashes
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    # CPU core limit
                    cpus: "1"
                    # RAM limit
                    memory: 2G

    #
    # Portainer for cluster management
    # --------------------------------
    #
    mc_portainer:
       image: portainer/portainer:1.20.2
       expose:
           # Web interface
           - "9000:9000"
       command: -H unix:///var/run/docker.sock
       volumes:
           - /var/run/docker.sock:/var/run/docker.sock
           - vol_portainer_data:/data
       deploy:
           # Only one instance
           replicas: 1
           resources:
               limits:
                   # CPU core limit
                   cpus: "1"
                   # RAM limit
                   memory: 1G

#
# Volumes
# =======
#
volumes:

    # PostgreSQL server's data
    vol_postgresql_data: {}

    # Solr shard's data
    vol_solr_shard_data: {}

    # ZooKeeper's data
    vol_solr_zookeeper_data: {}

    # RabbitMQ data
    vol_rabbitmq_data: {}

    # Postfix data
    vol_postfix_data: {}

    # Daily RSS dumps
    # (shared between cron_generate_daily_rss_dumps and webapp-httpd)
    vol_daily_rss_dumps: {}

    # Munin's RRD data
    # (shared between munin_cron and munin_httpd)
    vol_munin_data: {}

    # Munin's generated HTML files
    # (shared between munin_cron and munin_httpd)
    vol_munin_html: {}

    # Let's Encrypt certificates
    vol_proxy_letsencrypt: {}

    # Portainer data
    vol_portainer_data: {}

