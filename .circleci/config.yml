version: 2.1


# Restore .git
x-restore-cache: &restore-cache
  restore_cache:
    keys:
      - v00001-source-{{ .Branch }}-{{ .Revision }}
      - v00001-source-{{ .Branch }}-
      - v00001-source-

# Upgrade Docker
x-upgrade-docker: &upgrade-docker
  run:
    name: Upgrade Docker
    command: |
      sudo service docker stop
      sudo apt-get -y remove docker docker-engine docker.io containerd runc
      sudo apt-get -y install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
      sudo apt-get -y update
      sudo apt-get -y install docker-ce=18.06.3~ce~3-0~ubuntu

# Install utilities
x-install-utilities: &install-utilities
  run:
    name: Install utilities
    command: |
      # Use Python 3.5
      pyenv global 3.5.2
      # Install dependencies for python3-cryptography and parallel utility
      sudo apt-get -y install libssl-dev libffi-dev parallel
      # Install Pip
      curl https://bootstrap.pypa.io/3.2/get-pip.py | python3
      # python3-cryptography refuses to build with old setuptools
      pip3 install -U setuptools
      # Used for validating docker-compose.tests.yml
      pip3 install PyYAML
      pip3 install -U docker-compose
      docker version
      docker-compose version

# Pull Git submodules
x-pull-submodules: &pull-submodules
  run:
    name: Pull Git submodules
    command: |
      git submodule update --init --recursive

# Cache .git for faster checkouts
x-save-cache: &save-cache
  save_cache:
    key: v00001-source-{{ .Branch }}-{{ .Revision }}
    paths:
      - ".git"

# Pull images for faster rebuilds / cache
x-pull-images: &pull-images
  run:
    name: Pull images
    command: |
      # Don't stop on a single failure because the image might not exist or a
      # network error might have happened.
      ./dev/pull.py | bash || true

# Split tests into chunks
x-split-tests-into-chunks: &split-tests-into-chunks
  run:
    name: Split tests into chunks
    command: |
      ./dev/run_all_tests.py > tests_all
      split -n l/4 tests_all tests_chunk_

# Run chunk tests
x-run-chunk-tests: &run-chunk-tests
  run:
    name: Run chunk tests
    # * Treat command as a single line (thus ">")
    # * Remove lines with "Creating" / "Starting" / ... coming from docker-compose
    # * On failures, print parallel's job log
    command: >
      cat tests_chunk
      | parallel --group --joblog joblog.txt
      2> >(
          grep -v '^Creating'
        | grep -v '^Starting'
        | grep -v '^Stopping'
        | grep -v '^Removing'
        >&2
      ) || { cat joblog.txt && exit 1; }


jobs:
  pull_build_push:
    machine: true
    steps:
      - *restore-cache
      - *upgrade-docker
      - *install-utilities
      - checkout
      - *pull-submodules
      - *save-cache
      - *pull-images

      - run:
          name: Build images
          command: |
            ./dev/build.py | bash

      - run:
          name: Push images
          command: |
            # Log in to Docker Hub
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            # Push all images to Docker Hub
            ./dev/push.py | bash

  test_chunk_1:
    machine: true
    steps:
      - *restore-cache
      - *upgrade-docker
      - *install-utilities
      - checkout
      - *pull-submodules
      - *save-cache
      - *pull-images

      - *split-tests-into-chunks
      - run:
          name: Choose tests (chunk 1)
          command: |
            mv tests_chunk_aa tests_chunk
      - *run-chunk-tests

  test_chunk_2:
    machine: true
    steps:
      - *restore-cache
      - *upgrade-docker
      - *install-utilities
      - checkout
      - *pull-submodules
      - *save-cache
      - *pull-images

      - *split-tests-into-chunks
      - run:
          name: Choose tests (chunk 2)
          command: |
            mv tests_chunk_ab tests_chunk
      - *run-chunk-tests

  test_chunk_3:
    machine: true
    steps:
      - *restore-cache
      - *upgrade-docker
      - *install-utilities
      - checkout
      - *pull-submodules
      - *save-cache
      - *pull-images

      - *split-tests-into-chunks
      - run:
          name: Choose tests (chunk 3)
          command: |
            mv tests_chunk_ac tests_chunk
      - *run-chunk-tests

  test_chunk_4:
    machine: true
    steps:
      - *restore-cache
      - *upgrade-docker
      - *install-utilities
      - checkout
      - *pull-submodules
      - *save-cache
      - *pull-images

      - *split-tests-into-chunks
      - run:
          name: Choose tests (chunk 4)
          command: |
            mv tests_chunk_ad tests_chunk
      - *run-chunk-tests


workflows:
  version: 2
  pull_build_push_test:
    jobs:
      - pull_build_push
      - test_chunk_1:
          requires:
            - pull_build_push
      - test_chunk_2:
          requires:
            - pull_build_push
      - test_chunk_3:
          requires:
            - pull_build_push
      - test_chunk_4:
          requires:
            - pull_build_push
