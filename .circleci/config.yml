version: 2.1

jobs:
  build:
    machine: true
    steps:

      # Restore .git
      - restore_cache:
          keys:
            - v00001-source-{{ .Branch }}-{{ .Revision }}
            - v00001-source-{{ .Branch }}-
            - v00001-source-

      - run:
          name: Install utilities
          command: |
            sudo apt-get install -y python3 python3-yaml python3-pip parallel
            sudo pip3 install --quiet --upgrade docker-compose
            docker-compose version

      # Check out repository
      - checkout

      - run:
          name: Pull Git submodules
          command: |
            git submodule update --init --recursive

      # Cache .git for faster checkouts
      - save_cache:
          key: v00001-source-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"

      # Try to pull all the images that are about to be built from Docker Hub to be
      # used for cache.
      - run:
          name: Pull previously built images
          command: |
            # Don't stop on a single failure because the image might not exist or a
            # network error might have happened.
            ./dev/pull.py | bash || true

      - run:
          name: Build images
          command: |
            ./dev/build.py | bash

  test:
    machine: true
    # Chunks of tests
    parallelism: 4
    steps:

      - run:
          name: Run tests
          command: |
            echo "Total nodes: ${CIRCLE_NODE_TOTAL}"
            echo "Node index: ${CIRCLE_NODE_INDEX}"
            echo "Docker images:"
            docker images

  deploy:
    machine: true
    steps:

      - run:
          name: Push images
          command: |
            # Log in to Docker Hub
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            # Push all images to Docker Hub
            # FIXME move to build branch
            ./dev/push.py | bash
