#!/bin/bash

set -u
set -e

MC_POSTGRESQL_MEMORY_CONF_PATH="/var/run/postgresql/postgresql-memory.conf"

# Adjust configuration based on amount of RAM
MC_RAM_SIZE=$(/container_memory_limit.sh)
MC_POSTGRESQL_CONF_SHARED_BUFFERS=$((MC_RAM_SIZE / 3))
MC_POSTGRESQL_CONF_EFFECTIVE_CACHE_SIZE=$((MC_RAM_SIZE / 2))
MC_POSTGRESQL_MAINTENANCE_WORK_MEM=$((MC_RAM_SIZE / 32))
MC_POSTGRESQL_WORK_MEM=$((MC_RAM_SIZE / 96))

# Adjust configuration based on number of vCPUs
# FIXME what if there are not enough CPUs?
MC_CPU_COUNT=$(/container_cpu_limit.sh)
MC_POSTGRESQL_MAX_WORKER_PROCESSES=$MC_CPU_COUNT
MC_POSTGRESQL_MAX_PARALLEL_WORKERS_PER_GATHER=$((MC_CPU_COUNT / 8))
MC_POSTGRESQL_MAX_PARALLEL_WORKERS=$MC_CPU_COUNT
MC_POSTGRESQL_MAX_PARALLEL_MAINTENANCE_WORKERS=$((MC_CPU_COUNT / 8))

if (( $MC_POSTGRESQL_MAX_PARALLEL_WORKERS_PER_GATHER < 1 )); then
    MC_POSTGRESQL_MAX_PARALLEL_WORKERS_PER_GATHER=1
fi
if (( $MC_POSTGRESQL_MAX_PARALLEL_MAINTENANCE_WORKERS < 1 )); then
    MC_POSTGRESQL_MAX_PARALLEL_MAINTENANCE_WORKERS=1
fi

cat > "${MC_POSTGRESQL_MEMORY_CONF_PATH}" << EOF
#
# Auto-generated, please don't edit!
#

shared_buffers = ${MC_POSTGRESQL_CONF_SHARED_BUFFERS}MB
effective_cache_size = ${MC_POSTGRESQL_CONF_EFFECTIVE_CACHE_SIZE}MB
maintenance_work_mem = ${MC_POSTGRESQL_MAINTENANCE_WORK_MEM}MB
work_mem = ${MC_POSTGRESQL_WORK_MEM}MB

max_worker_processes = ${MC_POSTGRESQL_MAX_WORKER_PROCESSES}
max_parallel_workers_per_gather = ${MC_POSTGRESQL_MAX_PARALLEL_WORKERS_PER_GATHER}
max_parallel_workers = ${MC_POSTGRESQL_MAX_PARALLEL_WORKERS}
max_parallel_maintenance_workers = ${MC_POSTGRESQL_MAX_PARALLEL_MAINTENANCE_WORKERS}
EOF
