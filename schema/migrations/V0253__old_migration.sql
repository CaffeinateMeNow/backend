

DROP INDEX auth_user_ip_address_api_keys_api_key_ip_address;
DROP INDEX auth_users_api_key;

ALTER TABLE auth_user_ip_address_api_keys
    RENAME TO auth_user_api_keys;

ALTER TABLE auth_user_api_keys
    ALTER COLUMN ip_address DROP NOT NULL;

-- Copy existing non-IP limited API keys to "auth_user_api_keys"
INSERT INTO auth_user_api_keys (auth_users_id, api_key, ip_address)
    SELECT auth_users_id, api_key, NULL
    FROM auth_users;

ALTER TABLE auth_users
	DROP COLUMN api_key;

CREATE UNIQUE INDEX auth_user_api_keys_api_key_ip_address
    ON auth_user_api_keys (api_key, ip_address);

-- Autogenerate non-IP limited API key
CREATE OR REPLACE FUNCTION auth_user_api_keys_add_non_ip_limited_api_key() RETURNS trigger AS
$$
BEGIN

    INSERT INTO auth_user_api_keys (auth_users_id, api_key, ip_address)
    VALUES (
        NEW.auth_users_id,
        DEFAULT,  -- Autogenerated API key
        NULL      -- Not limited by IP address
    );
    RETURN NULL;

END;
$$
LANGUAGE 'plpgsql';

CREATE TRIGGER auth_user_api_keys_add_non_ip_limited_api_key
    AFTER INSERT ON auth_users
    FOR EACH ROW EXECUTE PROCEDURE auth_user_api_keys_add_non_ip_limited_api_key();


